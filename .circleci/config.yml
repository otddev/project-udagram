version: 2.1
orbs:
  # Load components for Node and AWS CLI
  node: circleci/node@4.7
  aws-cli: circleci/aws-cli@2.0.0
jobs:
  api_service:
    working_directory: ~/app/udagram-api
    executor: node/default
    steps:
      - checkout:
          path: ~/app
      - node/install-packages:
          app-dir: ~/app/udagram-api
      - run:
          # Generate Archive.zip file from distributed code version.
          name: Generate Archive File
          command: |-
            npm run build
      - run:
          # Install AWS EB CLI and Set EB Env Variables
          name: Install EB Dependencies
          command: |-
            sudo apt update
            sudo apt install python3-pip python-dev
            sudo pip install awsebcli
            sudo ./deploy.sh
      # Install AWS Cli v2.0
      - aws-cli/install
      # Prepare AWS Credentials for CLI Usage
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      # Copy Archive.zip into AWS Elastic Beanstalk Bucket
      - run:
          name: Copy Source to S3 Bucket
          command: |-
            aws s3 cp ./www/Archive.zip $AWS_EB_BUCKET_PATH
      # Create Application Version based on Archive.zip
      - run:
          name: Create Application
          command: |-
            aws elasticbeanstalk create-application-version --application-name $APP_NAME --version-label <<pipeline.git.revision>> --source-bundle S3Bucket="$AWS_EB_BUCKET",S3Key="Archive.zip"
      # Deploy new version of application into AWS ELB. After this step the new version will be available for usage.
      - run:
          name: Build and Deploy API Service
          command: |-
            aws elasticbeanstalk update-environment --application-name $APP_NAME --environment-name $AWS_EB_ENV --version-label <<pipeline.git.revision>>
  front_end:
    working_directory: ~/app/udagram-frontend
    executor: node/default
    steps:
      - checkout:
          path: ~/app
      - node/install-packages:
          app-dir: ~/app/udagram-frontend
      - run:
          # Create distributed version of source code.
          name: Create Distrubuted/Build Source Version
          command: npm run build
      - aws-cli/install
      - run:
          # Deploy/Copy distributed content generate and replace content in AWS S3 Bucket. After this step new version will be available for usage.
          name: Deploy Build WebSite
          command: aws s3 cp --recursive ./www $AWS_S3_BUCKET_PATH
workflows:
  deploy_app:
    jobs:
      # API Service Deployment Job
      - api_service:
          filters:
            branches:
              only: main
      # Web FrontEnd Deployment Job
      - front_end:
          filters:
            branches:
              only: main
